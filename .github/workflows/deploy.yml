name: CI/CD Pipeline
 
on:
  push:
    branches:
      - main
 
env:
  GCLOUD_PROJECT: 'empyrean-bridge-426118-q3'
  CLUSTER_NAME: 'shiv-cluster'
  CLUSTER_ZONE: 'us-central1-c'
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    defaults:
      run:
        shell: bash
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.GCLOUD_PROJECT }}
 
    - name: Authenticate to GCP
      run: |
        gcloud auth activate-service-account --key-file="${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}"
        gcloud config set project ${{ env.GCLOUD_PROJECT }}
 
    - name: Check if Artifact image exists
      id: artifact-check
      run: |
        IMAGE_EXISTS=$(gcloud artifacts files list --project=${{ env.GCLOUD_PROJECT }} --repository=docker-image --location=asia-east1 --package=${{ github.event.inputs.Image_name }} --tag=${{ github.event.inputs.Tags }} | wc -l)
        if [ $IMAGE_EXISTS -eq 0 ]; then
          echo "Image asia-east1-docker.pkg.dev/${{ env.GCLOUD_PROJECT }}/docker-image/${{ github.event.inputs.Image_name }}:${{ github.event.inputs.Tags }} does not exist in Artifact Registry. Aborting deployment."
          exit 1
        else
          echo "Image asia-east1-docker.pkg.dev/${{ env.GCLOUD_PROJECT }}/docker-image/${{ github.event.inputs.Image_name }}:${{ github.event.inputs.Tags }} exists in Artifact Registry!"
        fi
 
    - name: Connect to GKE Cluster
      run: |
        gcloud config set compute/zone ${{ env.CLUSTER_ZONE }}
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }}
 
    - name: Namespace creation/validation
      run: |
        kubectl get namespace ${{ github.event.inputs.NAMESPACE }} || kubectl create namespace ${{ github.event.inputs.NAMESPACE }}
 
    - name: Deploy to GKE
      run: |
        sed -i 's|\${Image_name}|${{ github.event.inputs.Image_name }}|g' Deployment.yml
        sed -i 's|\${Tags}|${{ github.event.inputs.Tags }}|g' Deployment.yml
        kubectl apply -f Deployment.yml -n ${{ github.event.inputs.NAMESPACE }}
        kubectl apply -f ingress.yml -n ${{ github.event.inputs.NAMESPACE }}
 
        
